package net.kodleeshare.rsbot.scripts.burthopesoftclayandurns.modulepackages;

import org.powerbot.script.Tile;

import net.kodleeshare.rsbot.script.modulescript.ClientContext;
import net.kodleeshare.rsbot.script.modulescript.Module;
import net.kodleeshare.rsbot.script.modulescript.module.SynchronousModule;
import net.kodleeshare.rsbot.script.modulescript.module.packages.SequentialPackage;
import net.kodleeshare.rsbot.script.modulescript.utilities.Travel;
import net.kodleeshare.rsbot.scripts.BurthopeSoftClayAndUrns;
import net.kodleeshare.system.Utilities.MinMaxPair;

/**
 * TODO: Insert description here. (generated by kodlee)
 */
public class ExitCave extends SequentialPackage<Module> {
	private static final int CAVE_EXIT_ID = 67002;
	private static final String CAVE_EXIT_INTERACT = "Exit";
	
	private static final MinMaxPair IN_VIEW_TIME = new MinMaxPair(800, 1000);
	
	private static final Tile[] EXIT_PATH = new Tile[] {
		new Tile(2272, 4521),
		new Tile(2274, 4515),
		new Tile(2280, 4513),
		new Tile(2285, 4514),
		new Tile(2291, 4516)
	};
	private static final int EXIT_PATH_FLUX = 3;
	public ExitCave(ClientContext ctx) {
		super(ctx);
		this
		//Go to cave exit
		.install(new SequentialPackage<Module>(this.ctx) {
			{
				this.install(Travel.getSyncRunModulesFromTiles(this.ctx, EXIT_PATH_FLUX, EXIT_PATH));
			}
			@Override
			public boolean canRun() { return true; }
		})
		//Make sure cave entrance is in view
		
		;
	}

	@Override
	public boolean canRun() {
		return BurthopeSoftClayAndUrns.CAVE_AREA.contains(this.ctx.players.local());
	}
}
